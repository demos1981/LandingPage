import { useState } from "react";
import styles from "./OrderForm.module.css";

type OrderFormProps = {
  productName: string;
};

export default function OrderForm({ productName }: OrderFormProps) {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    city: "",
    postOffice: "",
  });

  const [error, setError] = useState<string | null>(null);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const validate = () => {
    if (!formData.name.trim()) return "–í–≤–µ–¥—ñ—Ç—å —ñ–º º—è";
    if (!/^\+?\d{10,13}$/.test(formData.phone))
      return "–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É";
    if (!formData.city.trim()) return "–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ç–æ";
    if (!formData.postOffice.trim()) return "–í–∫–∞–∂—ñ—Ç—å –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ø–æ—à—Ç–∏";
    return null;
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const validationError = validate();
    if (validationError) {
      setError(validationError);
      return;
    }

    const payload = { product: productName, ...formData };

    try {
      const res = await fetch("/api/sendOrder", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      const result = await res.json(); // üëà —á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç

      if (res.ok && result.success) {
        alert("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      } else {
        console.error("‚ùå –í—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —Å–µ—Ä–≤–µ—Ä–∞:", result); // üëà –ª–æ–≥–∏–º –æ—à–∏–±–∫—É
        alert(
          "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ: " + (result?.error || "–Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞")
        );
      }
    } catch (err) {
      console.error("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—à–∏–±–∫–∞:", err);
      alert("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π: " + String(err));
    }
  };

  return (
    <div className={styles.formContainer}>
      <h2 className={styles.formTitle}>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è: {productName}</h2>
      {error && <p className={styles.errorText}>{error}</p>}
      <form onSubmit={handleSubmit} className={styles.form}>
        <input
          name="name"
          placeholder="–Ü–º º—è"
          value={formData.name}
          onChange={handleChange}
          className="border p-2 rounded"
        />
        <input
          name="phone"
          placeholder="+380XXXXXXXXX"
          value={formData.phone}
          onChange={handleChange}
          className="border p-2 rounded"
        />
        <input
          name="city"
          placeholder="–ú—ñ—Å—Ç–æ"
          value={formData.city}
          onChange={handleChange}
          className="border p-2 rounded"
        />
        <input
          name="postOffice"
          placeholder="–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ø–æ—à—Ç–∏"
          value={formData.postOffice}
          onChange={handleChange}
          className="border p-2 rounded"
        />
        <button
          type="submit"
          className="bg-blue-600 text-white p-2 rounded hover:bg-blue-700"
        >
          –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏
        </button>
      </form>
    </div>
  );
}
